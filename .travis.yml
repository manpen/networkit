language: generic

git:
  depth: 1

env:
  global:
    - export OMP_NUM_THREADS=2
    - export CXX_STANDARD=11
    - export MONOLITH=ON

matrix:
  include:
    - name: "Style guide compliance"
      os: linux
      dist: bionic 
      addons:
        apt:
          sources: ['llvm-toolchain-bionic-8']
          packages: ['clang-format-8']
      script:
        - set -e
        - ./check_code.sh -v

script:
 - $CXX --version
 - python3 --version
 - cmake --version

 - python3 -m venv pyenv && . pyenv/bin/activate
 - pip3 install --upgrade pip
 # cython is required because git does not contain _NetworKit.
 # ipython is required for tests.
 - pip3 install cython ipython jupyter

 # First, build the C++ core library and run C++ tests.
 - mkdir core_build && cd "$_"
 - cmake -DNETWORKIT_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release -DNETWORKIT_CXX_STANDARD=$CXX_STANDARD -DNETWORKIT_WARNINGS=ON -DNETWORKIT_WARNINGS_AS_ERRORS=ON ..
 - make -j2
 - UBSAN_OPTIONS=print_stacktrace=1:halt_on_error=1 ASAN_OPTIONS=abort_on_error=1 ctest -V
 - cd ..

 # Finally, build the Python extension and run Python tests.
 - export CMAKE_LIBRARY_PATH=${CMAKE_LIBRARY_PATH:+$CMAKE_LIBRARY_PATH:}$(pwd)/core_build
 - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$(pwd)/core_build
 - NETWORKIT_PARALLEL_JOBS=2 python3 ./setup.py build_ext --inplace --networkit-external-core
 - NETWORKIT_PARALLEL_JOBS=2 pip3 install -e .
 # Check that NetworKit can be successfuly imported without dependencies.
 - python3 -c "import networkit"
 # Install dependencies before running the tests.
 - pip3 install -r requirements.txt
 - python3 -m unittest discover -v networkit/test/

 # Test Jupyter-notebooks
 - python3 notebooks/test_notebooks.py 'notebooks/'

notifications:
  email: false
